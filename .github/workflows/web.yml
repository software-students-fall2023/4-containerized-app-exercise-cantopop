name: Web App (build/test/deploy)

on:
  push: 
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install
        cd web-app
    - name: Testing with pytest
      run: |
        pipenv run pytest

    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: bailongzhao
        password: ${{ secrets.DOCKER_HUB_PASS }}
    
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: bailongzhao/easy_notes
    - name: Build Container
      run: |
        docker-compose build
        docker-compose up -d
    - name: push Docker image
      run: |
        docker-compose push
        
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Deploy Digital Ocean
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H 159.203.121.138 >> ~/.ssh/known_hosts
        sshpass -p 'Cd#234GG' ssh -o StrictHostKeyChecking=no root@159.203.121.138 "
        cd 4-containerized-app-exercise-cantopop && 
        docker-compose down && 
        git pull origin main && 
        docker-compose build --no-cache && 
        docker-compose up -d "|| true

